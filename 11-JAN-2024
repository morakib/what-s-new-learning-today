int main() {
    int n, q;
    scanf("%d%d", &n, &q);

    // Read the initial sequence of integers into vector a0
    vector<ll> a0(n);
    for (ll &x : a0)
        scanf("%lld", &x);

    // Loop for each query
    for (++q; --q;) {
        // Copy the original sequence a0 to vector a
        vector<ll> a = a0;

        // Read the value of k for the current query
        ll k;
        scanf("%lld", &k);

        // Initialize variables for the answer, and p (a power of 2, starting from 2^60)
        ll ans = 0, p = (1ll) << 60;

        // Loop through each bit of p (from 2^60 to 2^0)
        for (int bit = 60; bit >= 0; --bit) {
            ll necess = 0;

            // Calculate the necessity of increasing each element to the current power of 2
            for (ll &x : a) {
                necess += max(p - x, 0ll);
                if (necess > k)
                    break;
            }

            // If the necessity is less than or equal to k, update the answer, reduce k, and modify the sequence
            if (necess <= k) {
                ans += p;
                k -= necess;
                for (ll &x : a)
                    x = max(x, p);
            }

            // Modulo each element by the current power of 2
            for (ll &x : a)
                x %= p;

            // Reduce p by dividing it by 2
            p >>= 1;
        }

        // Print the answer for the current query
        printf("%lld\n", ans);
    }

    return 0;
}


----------------------------------------------------theofanis nightmare cf-------------------------------------------------

///basocally first we will add all the numbers once than we will take the suffix sums if it is greater than 0 than we will alse
///add the sum ,here ans is added always so multiplying is occcuring here by this method
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int arr[n];
        long long suf[n+1] = {0};
        for(int i = 0;i < n;i++){
            cin>>arr[i];
        }
        for(int i = n-1;i >= 0;i--){
            suf[i] = suf[i+1] + arr[i];
        }
        long long ans = suf[0];
        for(int i = 1;i < n;i++){
            if(suf[i] > 0){
                ans += suf[i];
            }
        }
        cout<<ans<<"\n";
    }
}
